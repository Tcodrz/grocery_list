import { createAction, props } from '@ngrx/store';
import { SortOptions } from 'src/app/core/models/sort-options.enum';
import { Item } from '../../core/models/item.interface';
import { List } from './../../core/models/list.interface';
export const AddUserToList = createAction('[LISTS] ADD USER TO LIST', props<{ payload: { userID: any; listID: any; }; }>());
export const Create = createAction('[LISTS] CREATE', props<{ payload: { list: List, sUserID: string } }>());
export const ItemAdd = createAction('[LISTS] ADD ITEM', props<{ payload: { list: List; item: Item } }>());
export const ItemAdded = createAction('[LISTS] ITEM ADDED', props<{ payload: List }>());
export const ListClear = createAction('[LISTS] CLEAR', props<{ payload: List }>());
export const ListCleared = createAction('[LISTS] CLEARED', props<{ payload: List }>());
export const ListCreated = createAction('[LISTS] LIST ADDED', props<{ payload: List }>());
export const ListDelete = createAction('[LISTS] DELETE LIST', props<{ payload: List }>());
export const ListDeleted = createAction('[LISTS] DELETED', props<{ payload: List }>());
export const ListFetch = createAction('[LIST] FETCH', props<{ sListID: string }>());
export const ListFetched = createAction('[LIST] FETCHED', props<{ payload: List }>());
export const Load = createAction('[LISTS] LOAD', props<{ sUserID: string }>());
export const Loaded = createAction('[LISTS] LOADED', props<{ payload: List[] }>());
export const RemoveUserFromList = createAction('[LISTS] REMOVE USER', props<{ payload: { userID: string, list: List } }>());
export const Reset = createAction('[LISTS] RESET');
export const setCurrentList = createAction('[LISTS] SET CURRENT', props<{ payload: number }>());
export const SortItems = createAction('[LISTS] SORT ITEMS', props<{ payload: { listID: string, sortOption: SortOptions } }>());
export const Update = createAction('[LISTS] UPDATE', props<{ payload: List }>());
export const Updated = createAction('[LISTS] UPDATED', props<{ payload: List }>());
export const UserRemovedFromList = createAction('[LISTS] REMOVE USER', props<{ payload: List }>());
